{
    "project": {},
    "files": {
        "apps/pinpoint/static/pinpoint/js/pages.marionette.init.js": {
            "name": "apps/pinpoint/static/pinpoint/js/pages.marionette.init.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js": {
            "name": "apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "apps/pinpoint/static/pinpoint/js/pages.marionette.js": {
            "name": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "modules": {},
            "classes": {
                "Discovery": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js": {
            "name": "apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "apps/pinpoint/static/pinpoint/js/pages.marionette.preinit.js": {
            "name": "apps/pinpoint/static/pinpoint/js/pages.marionette.preinit.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "apps/pinpoint/static/pinpoint/js/pages.marionette.spec.js": {
            "name": "apps/pinpoint/static/pinpoint/js/pages.marionette.spec.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "apps/pinpoint/static/pinpoint/js/pages.marionette.tracker.js": {
            "name": "apps/pinpoint/static/pinpoint/js/pages.marionette.tracker.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js": {
            "name": "apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "apps/pinpoint/static/pinpoint/js/pages.marionette.viewport.js": {
            "name": "apps/pinpoint/static/pinpoint/js/pages.marionette.viewport.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Discovery": {
            "name": "Discovery",
            "shortname": "Discovery",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "line": 485,
            "description": "Manages the HTML/View of ALL the tiles on the page (our discovery area)",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.init.js",
            "line": 4,
            "description": "Given an instance of  Marionette Application, add initializers to it.",
            "params": [
                {
                    "name": "app",
                    "description": ""
                }
            ],
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js",
            "line": 43,
            "description": "Filter the content based on the selector\npassed and the criteria/filters defined in the SecondFunnel options.",
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "selector",
                    "description": ": (optional) no idea what this is.\n                          I think it stands for additional filters.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "filtered content",
                "type": "Array"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js",
            "line": 76,
            "description": "general implementation",
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js",
            "line": 89,
            "params": [
                {
                    "name": "overrides",
                    "description": "(unused)"
                }
            ],
            "return": {
                "description": "something $.when() accepts"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js",
            "line": 102,
            "params": [
                {
                    "name": "overrides",
                    "description": ""
                }
            ],
            "return": {
                "description": "$.Deferred()"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "line": 10,
            "description": "convenience method for accessing PAGES_INFO or TEST_*.\n\nTo access deep options (e.g. PAGES_INFO.store.name), use the key\n\"store.name\" or \"store:name\" (preferred).",
            "itemtype": "method",
            "name": "option",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "defaultValue",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "line": 51,
            "description": "Marionette TemplateCache extension to allow checking cache for template\nChecks if the Template exists in the cache, if not found\nupdates the cache with the template (if it exists), otherwise fail\nreturns true if exists otherwise false.",
            "itemtype": "method",
            "name": "_exists",
            "params": [
                {
                    "name": "templateId",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "line": 161,
            "description": "Using its model instance, create a view of the \"best\" class.\nIf the chosen view's matching template cannot be found, this\nreturns undefined.",
            "return": {
                "description": "",
                "type": "TileView"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "line": 418,
            "description": "Determine which click handler to use; determined by the content type.",
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "line": 428,
            "description": "Renders a YouTube video in the tile.",
            "params": [
                {
                    "name": "ev",
                    "description": ": JS event object",
                    "type": "jQuery.Event"
                }
            ],
            "return": {
                "description": "undefined"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "line": 558,
            "params": [
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "tile",
                    "description": ": supply a tile View to have tiles inserted\n                         after it. (optional)",
                    "type": "TileView"
                }
            ],
            "return": {
                "description": "core.Discovery"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "line": 584,
            "params": [
                {
                    "name": "data",
                    "description": ": byproduct of .always() passing back the data.\n                     its use is not recommended.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "line": 600,
            "params": [
                {
                    "name": "data",
                    "description": ": list of product json objects",
                    "type": "Array"
                },
                {
                    "name": "tile",
                    "description": ": pre-rendered tile view",
                    "type": "View"
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.js",
            "line": 643,
            "description": "Adds \"col-n\" classes to the html tag.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Discovery"
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js",
            "line": 2,
            "description": "Doc",
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js",
            "line": 74,
            "description": "Mix of append() and insert()",
            "params": [
                {
                    "name": "fragment",
                    "description": ": a array of elements.",
                    "type": "Array"
                },
                {
                    "name": "$target",
                    "description": ": if given, fragment is inserted after the target,\n                         if not, fragment is appended at the bottom.",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred"
            },
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js",
            "line": 105,
            "description": "Resets the LayoutEngine's instance so that it is empty.\nConventional $el.empty() doesn't work because the container height\nis set by masonry.",
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js",
            "line": 118,
            "description": "Enable when IR supports colour and dimensions.",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Deferred(args)"
            },
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js",
            "line": 170,
            "deprecated": true,
            "deprecationMessage": ": Use until ImageService is reading/returns dominant colour\nCalls the broken handler to remove broken images as they appear;\nWhen all images are loaded, resolves the promise returned",
            "params": [
                {
                    "name": "tiles",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise(args)"
            },
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.preinit.js",
            "line": 90,
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.preinit.js",
            "line": 288,
            "description": "alias for vent.on with a clear intent that the event triggered\nis NOT used by internal code (pages.js).\ncalling method: (eventName, other stuff)",
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.preinit.js",
            "line": 305,
            "description": "similar usage as $.noop",
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.preinit.js",
            "line": 314,
            "description": "Sequential script getter. ($.fn.getScripts is parallel)",
            "params": [
                {
                    "name": "urls",
                    "description": ": array of script urls",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": ": what to do afterwards.",
                    "type": "Function"
                }
            ],
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.spec.js",
            "line": 342,
            "description": "When a user activates a tile, that tile must:\n Take its activation action\n Load related results from the source URL\nDevelopers and designers must be able to create listeners for important events including, but not limited to: hovering over a tile, hovering over a social button, sharing using a social button, page scrolling, preview activation / deactivation, product clickthrough, page exit, tiles added to the landing page, tiles finished loading, window resized, dependencies loaded, page complete load, pre-page complete load",
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.spec.js",
            "line": 351,
            "description": "Landing pages must track the following customer metrics:\n Time on site\n Page bounce rate\n Product interactions including but not limited to: preview, shares\n Lifestyle interactions including, but not limited to: preview, shares, video plays\n Purchase actions including, but not limited to: ‘Shop Now’, ‘Find in Store’ or similar\n Product impressions\n Content impressions including, but not limited to: lifestyle images, video",
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.spec.js",
            "line": 367,
            "description": "Landing pages must not add or remove classes that cause an unexpected change in style\nTheme designers should not need to implement complex functionality:\n Complex functionality should be encapsulated as additional functionality that is available to theme designers",
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.tracker.js",
            "line": 131,
            "description": "Top-level event binding wrapper. all events bubble up to this level.\n\nThe theme can declare as many event handlers as they like by creating\ntheir own new EventManager({ event: handler, event: ... })s.",
            "type": "{*}",
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.tracker.js",
            "line": 152,
            "params": [
                {
                    "name": "attrs",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js",
            "line": 9,
            "description": "Cleans obviously invalid UI strings.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "opts",
                    "description": "",
                    "type": "Undefined"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js",
            "line": 25,
            "description": "Does minimal URL checking (stackoverflow.com/a/1305082/1558430)",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js",
            "line": 36,
            "description": "add a predefined UI component implemented as a region.",
            "params": [
                {
                    "name": "name",
                    "description": "of the widget.\n                name must be unique.\n                if registerWidget is called with an existing\n                 widget, the old one is overwritten.",
                    "type": "String"
                },
                {
                    "name": "selector",
                    "description": "a jquery selector,",
                    "type": "String"
                },
                {
                    "name": "functionality",
                    "description": "the widget function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "true"
            },
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js",
            "line": 55,
            "description": "allows designers to add a custom (tile) class.\nif class name is already taken, the original class is overwritten.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "defn",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "defn"
            },
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js",
            "line": 69,
            "description": "returns a class in the window scope and app core,\n or defaultClass if nothing else is found.\nThis is also known as patching.",
            "params": [
                {
                    "name": "typeName",
                    "description": "e.g. 'Tile', 'TileView'",
                    "type": "String"
                },
                {
                    "name": "prefix",
                    "description": "e.g. 'Video'",
                    "type": "String"
                },
                {
                    "name": "defaultClass",
                    "description": "e.g. TileView",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "|defaultClass",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js",
            "line": 97,
            "description": "process widget regions.\neach widget function receives args (the view, the $element, option alias).\nTODO: tests",
            "params": [
                {
                    "name": "viewObject",
                    "description": "",
                    "type": "View"
                }
            ],
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js",
            "line": 127,
            "description": "returns a url that is either\n   - the url, if it is not an image service url, or\n   - an image url pointing to one that is at least as wide as\n     minWidth, or\n   - an image url pointing to one that is at most as wide as\n     the window width, or\n   - if minWidth is ridiculously large, master.jpg.\nif scalePolicy is \"max\", then the image served is always smaller\n   than requested.",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "minWidth",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "scalePolicy",
                    "description": "",
                    "type": "Min|max|undefined"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.viewport.js",
            "line": 20,
            "description": "returns an array containing viewport analysis",
            "params": [
                {
                    "name": "desiredWidth",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "enabled[, width, scale, meta], some of which can\n                be undefined if not applicable.",
                "type": "Array"
            },
            "class": ""
        },
        {
            "file": "apps/pinpoint/static/pinpoint/js/pages.marionette.viewport.js",
            "line": 84,
            "description": "attempt to lock the viewport to appear as wide as desiredWidth\nby scaling the entire viewport.\n\nthe meta viewport tag is NOT standard, and does NOT work on all devices.\n(this concerns mostly IE10 on Windows Phone)",
            "params": [
                {
                    "name": "desiredWidth",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "undefined"
            },
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js:43"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js:89"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js:102"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:51"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:161"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:418"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:428"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:558"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:584"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:600"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:643"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js:118"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js:170"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:9"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:36"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:55"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:69"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:127"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.viewport.js:84"
        },
        {
            "message": "Missing item type\nGiven an instance of  Marionette Application, add initializers to it.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.init.js:4"
        },
        {
            "message": "Missing item type\nFilter the content based on the selector\npassed and the criteria/filters defined in the SecondFunnel options.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js:43"
        },
        {
            "message": "Missing item type\ngeneral implementation",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js:76"
        },
        {
            "message": "Missing item type",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js:89"
        },
        {
            "message": "Missing item type",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.ir.js:102"
        },
        {
            "message": "Missing item type\nUsing its model instance, create a view of the \"best\" class.\nIf the chosen view's matching template cannot be found, this\nreturns undefined.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:161"
        },
        {
            "message": "Missing item type\nDetermine which click handler to use; determined by the content type.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:418"
        },
        {
            "message": "Missing item type\nRenders a YouTube video in the tile.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:428"
        },
        {
            "message": "Missing item type",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:558"
        },
        {
            "message": "Missing item type",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:584"
        },
        {
            "message": "Missing item type",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:600"
        },
        {
            "message": "Missing item type\nAdds \"col-n\" classes to the html tag.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.js:643"
        },
        {
            "message": "Missing item type\nDoc",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js:2"
        },
        {
            "message": "Missing item type\nMix of append() and insert()",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js:74"
        },
        {
            "message": "Missing item type\nResets the LayoutEngine's instance so that it is empty.\nConventional $el.empty() doesn't work because the container height\nis set by masonry.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js:105"
        },
        {
            "message": "Missing item type\nEnable when IR supports colour and dimensions.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js:118"
        },
        {
            "message": "Missing item type",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.layoutengine.js:170"
        },
        {
            "message": "Missing item type",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.preinit.js:90"
        },
        {
            "message": "Missing item type\nalias for vent.on with a clear intent that the event triggered\nis NOT used by internal code (pages.js).\ncalling method: (eventName, other stuff)",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.preinit.js:288"
        },
        {
            "message": "Missing item type\nsimilar usage as $.noop",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.preinit.js:305"
        },
        {
            "message": "Missing item type\nSequential script getter. ($.fn.getScripts is parallel)",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.preinit.js:314"
        },
        {
            "message": "Missing item type\nWhen a user activates a tile, that tile must:\n Take its activation action\n Load related results from the source URL\nDevelopers and designers must be able to create listeners for important events including, but not limited to: hovering over a tile, hovering over a social button, sharing using a social button, page scrolling, preview activation / deactivation, product clickthrough, page exit, tiles added to the landing page, tiles finished loading, window resized, dependencies loaded, page complete load, pre-page complete load",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.spec.js:342"
        },
        {
            "message": "Missing item type\nLanding pages must track the following customer metrics:\n Time on site\n Page bounce rate\n Product interactions including but not limited to: preview, shares\n Lifestyle interactions including, but not limited to: preview, shares, video plays\n Purchase actions including, but not limited to: ‘Shop Now’, ‘Find in Store’ or similar\n Product impressions\n Content impressions including, but not limited to: lifestyle images, video",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.spec.js:351"
        },
        {
            "message": "Missing item type\nLanding pages must not add or remove classes that cause an unexpected change in style\nTheme designers should not need to implement complex functionality:\n Complex functionality should be encapsulated as additional functionality that is available to theme designers",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.spec.js:367"
        },
        {
            "message": "Missing item type\nTop-level event binding wrapper. all events bubble up to this level.\n\nThe theme can declare as many event handlers as they like by creating\ntheir own new EventManager({ event: handler, event: ... })s.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.tracker.js:131"
        },
        {
            "message": "Missing item type",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.tracker.js:152"
        },
        {
            "message": "Missing item type\nCleans obviously invalid UI strings.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:9"
        },
        {
            "message": "Missing item type\nDoes minimal URL checking (stackoverflow.com/a/1305082/1558430)",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:25"
        },
        {
            "message": "Missing item type\nadd a predefined UI component implemented as a region.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:36"
        },
        {
            "message": "Missing item type\nallows designers to add a custom (tile) class.\nif class name is already taken, the original class is overwritten.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:55"
        },
        {
            "message": "Missing item type\nreturns a class in the window scope and app core,\n or defaultClass if nothing else is found.\nThis is also known as patching.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:69"
        },
        {
            "message": "Missing item type\nprocess widget regions.\neach widget function receives args (the view, the $element, option alias).\nTODO: tests",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:97"
        },
        {
            "message": "Missing item type\nreturns a url that is either\n   - the url, if it is not an image service url, or\n   - an image url pointing to one that is at least as wide as\n     minWidth, or\n   - an image url pointing to one that is at most as wide as\n     the window width, or\n   - if minWidth is ridiculously large, master.jpg.\nif scalePolicy is \"max\", then the image served is always smaller\n   than requested.",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.utils.js:127"
        },
        {
            "message": "Missing item type\nreturns an array containing viewport analysis",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.viewport.js:20"
        },
        {
            "message": "Missing item type\nattempt to lock the viewport to appear as wide as desiredWidth\nby scaling the entire viewport.\n\nthe meta viewport tag is NOT standard, and does NOT work on all devices.\n(this concerns mostly IE10 on Windows Phone)",
            "line": " apps/pinpoint/static/pinpoint/js/pages.marionette.viewport.js:84"
        }
    ]
}