- name: Copy deploy key over
  template: src={{item}} dest={{secondfunnel_directory}}/{{item}} mode=0600
  with_items:
    - willet_deploy_key_id_rsa
    - willet_deploy_key_id_rsa.pub
  when: app_environment != 'vagrant'

- name: "Delete Previous Rollback Codebase"
  file: state=absent force=yes path="{{application_directory}}-rollback"
  when: app_environment != 'vagrant'

- name: "Create Rollback of existing codebase"
  stat: path="{{application_directory}}"
  register: codebase
  when: app_environment != 'vagrant'

- command: mv "{{application_directory}}" "{{application_directory}}-rollback"
  when: app_environment != 'vagrant' and codebase.stat.exists

- name: Create Directory for Application
  file: state=directory path="{{application_directory}}" mode=0777 owner={{common_user}} group={{common_user}}
  sudo: true

- name: Sync latest version of repository
  git: repo=ssh://git@github.com/Willet/SecondFunnel.git
      dest="{{application_directory}}"
      key_file="{{secondfunnel_directory}}/willet_deploy_key_id_rsa"
      depth=1 accept_hostkey=yes
      version="{{git_branch}}"
  register: git_repo
  notify: uwsgi reload
  when: "'vagrant' not in groups"

- name: Install Python Application Requirements (dev)
  pip: requirements={{ application_directory }}/requirements/dev.txt virtualenv={{virtualenv_directory}}
  when: "'vagrant' in groups"
  async: 3600
  poll: 15

- name: Install Python Application Requirements (non-dev)
  pip: requirements={{ application_directory }}/requirements.txt virtualenv={{virtualenv_directory}}
  when: "'vagrant' not in groups and git_repo|changed"
  async: 3600
  poll: 15

- name: Remove any existing node_modules or bower_libs if they exist
  stat: path="{{application_directory}}/{{item.src}}"
  register: shared_libs_stat
  with_items:
    - { src: "apps/light/node_modules", dest: "node_modules" }
    - { src: "apps/light/lib", dest: "bower_libs" }
    - { src: "apps/light/static", dest: "light_static" }
    - { src: "apps/static", dest: "static" }

- name: Delete node_modules if it isn't the symbolic link, so we can create the link
  file: state=absent path="{{item.invocation.path}}" force=yes
  when: item.stat.exists and not item.stat.islnk
  with_items: shared_libs_stat.results

- name: Link any directories shared between application deployments
  file: state=link path="{{application_directory}}/{{item.src}}" src="{{secondfunnel_shared_directory}}/{{item.dest}}" force=yes
  with_items:
    - { src: "apps/light/node_modules", dest: "node_modules" }
    - { src: "apps/light/lib", dest: "bower_libs" }
    - { src: "apps/light/static", dest: "light_static" }
    - { src: "apps/static", dest: "static" }

- name: Build Node Modules
  npm: path="{{application_directory}}/apps/light"
  sudo: true

- name: Install Javascript and Light Dependencies
  command: bower install
  args:
    chdir: "{{application_directory}}/apps/light"

- name: Run Gulp to build pages and static assets
  command: gulp --require coffee-script/register build
  args:
    chdir: "{{application_directory}}/apps/light"

- name: Migration of database, etc
  shell: ". /etc/profile && {{virtualenv_directory}}/bin/python manage.py {{item}} --settings=$DJANGO_SETTINGS_MODULE"
  args:
    chdir: "{{application_directory}}"
  with_items:
    - "syncdb --noinput"
    - "migrate --noinput"
  notify: uwsgi reload
  when: "'vagrant' in groups or git_repo|changed"

- name: Django production static/asset compilation
  shell: ". /etc/profile && {{virtualenv_directory}}/bin/python manage.py {{item}} --settings=$DJANGO_SETTINGS_MODULE"
  args:
    chdir: "{{application_directory}}"
  with_items:
    - "collectstatic --noinput"
  when: "'vagrant' in groups or git_repo|changed"

- name: Compress static, and manifest creation
  shell: ". /etc/profile && {{virtualenv_directory}}/bin/python manage.py {{item}} --settings=$DJANGO_SETTINGS_MODULE"
  args:
    chdir: "{{application_directory}}"
  with_items:
    - "compress --force"
  register: compress_result
  failed_when: compress_result.rc == 0 or compress_result.stderr.find("No 'compress' template tags found in templates") == -1
  when: "'vagrant' not in groups and git_repo|changed"
