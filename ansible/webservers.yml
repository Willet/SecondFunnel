- name: "Remove any (local) known hosts already for the given box"
  hosts: webservers:&vagrant
  gather_facts: no
  tasks:
    - name: "Remove KNOWN_HOSTS"
      local_action: command ssh-keygen -R '{{item}}'
      with_items:
        - "{{ansible_ssh_host}}"
        - "[{{ansible_ssh_host}}]:{{ansible_ssh_port}}"
      tags: vagrant_data_import

- name: "Bootstrap Servers"
  serial: 2
  hosts: webservers:!building
  remote_user: "{{bootstrap_user}}"
  roles:
    - { role: common, tags: common }

- name: "Setup Database (vagrant)"
  hosts: webservers:&vagrant
  remote_user: "{{common_user}}"
  roles:
    - { role: db, tags: db }

- name: "Setup Servers"
  serial: 2
  hosts: webservers:!building
  remote_user: "{{common_user}}"
  pre_tasks:
    - name: "Gathering ec2 facts"
      ec2_facts:
      when: app_environment != "vagrant"
      tags: deploy
    - name: "De-Register Instance from LB"
      local_action: ec2_elb
      args:
        instance_id: "{{ansible_ec2_instance_id}}"
        ec2_elbs: "{{aws_lb.name}}"
        region: "{{aws_region}}"
        state: "absent"
      ignore_errors: yes
      when: app_environment != "vagrant"
      tags: deploy
  roles:
    - web
  post_tasks:
    - name: "Register Instance on LB"
      local_action: ec2_elb
      args:
        instance_id: "{{ansible_ec2_instance_id}}"
        ec2_elbs: "{{aws_lb.name}}"
        region: "{{aws_region}}"
        state: "present"
      ignore_errors: yes
      when: app_environment != "vagrant"
      tags: deploy

- name: "Post Configuration"
  hosts: webservers:!building
  remote_user: "{{common_user}}"
  gather_facts: False # since we are just notifying hipchat anyways
  tasks:
    - name: "Notify hipchat of configuration changes"
      local_action: hipchat
        token="{{ hipchat.token }}"
        room="{{ hipchat.room }}"
        msg="(goodnews)(doge) {{app_environment|title}} deployment and configuration complete. ({{play_hosts|length}} machines were updated)"
        color="green"
        from="Hubert"
      tags: deploy
      when: (app_environment | default('vagrant') != 'vagrant') and inventory_hostname == play_hosts[0] # change to only once in the future
