---
- name: "Launch EC2 instance to image"
  hosts: localhost
  connection: local

  tasks:
  - name: "Launch EC2 instance"
    action:
      module: ec2
      image: "{{ aws_base_image }}"
      instance_type: "{{aws_instance_type}}"
      state: present
      region: "{{ aws_region }}"
      key_name: "{{ aws_sshkey_name }}"
      group: "secondfunnel-{{app_environment}}"
      wait: true
      instance_tags:
        Name: "secondfunnel-{{app_environment}}"
        Environment: "{{app_environment}}"
    register: ec2

  - name: Add new instance to host groups
    local_action: add_host hostname="{{item.public_dns_name}}" groups="{{app_environment}},launched"
    with_items: ec2.instances

  - name: Wait for SSH to come up
    local_action: wait_for host="{{item.public_dns_name}}" port=22 delay=20 timeout=320 state=started
    with_items: ec2.instances

- name: "Bootstrap Servers"
  hosts: launched
  gather_facts: true
  roles:
    - common

- name: "Configure AMI"
  hosts: launched
  remote_user: "{{common_user}}"
  roles:
    - { role: newrelic, tags: newrelic, sudo: true }
    - { role: monit, tags: monit, sudo: true }
    - { role: nginx, tags: nginx, sudo: true }
    - { role: node, tags: node }
    - { role: pgbouncer, tags: pgbouncer, sudo: true }
    - web
    - { role: uwsgi, tags: uwsgi }


- name: "Terminate instances"
  hosts: localhost
  connection: local

  tasks:
    - name: "Save the AMI"
      local_action:
        module: ec2_ami
        aws_access_key: "{{aws_access_key_id}}"
        aws_secret_key: "{{aws_secret_key}}"
        wait: yes
        region: "{{aws_region}}"
        name: "secondfunnel-{{app_environment}}-web ({{ansible_date_time.date}})"
        description: "SecondFunnel {{app_enviroment|title}} Environment - Web Server"
        instance_id: "{{item.id}}" # could be instance_id or ec2_id
      with_items: ec2.instances
      register: instance

    - name: "Terminate instances that were previously launched"
      local_action:
        module: ec2
        state: 'absent'
        instance_ids: '{{ ec2.instance_ids }}'
