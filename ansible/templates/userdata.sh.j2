#!/bin/bash -ex
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
echo BEGIN
date '+%Y-%m-%d %H:%M:%S'

# NOTE: this file is not copied to running instances!
# setup the below environment variables and set on AMI's
# within AWS Console

APP_ENVIRONMENT={{app_environment}}
GIT_BRANCH={{git_branch}}
PLAYBOOK=ansible/webservers.yml
TAGS=deploy
REPO_NAME=SecondFunnel
GIT_REPO=git@github.com:Willet/SecondFunnel.git
DEPLOY_KEY={{secondfunnel_directory}}/willet_deploy_key_id_rsa
INVENTORY_FILE=~/ansible_local_inventory

# start the ssh-agent, and set it up in the current shell
eval `ssh-agent`

# add the deploy key to the running ssh-agent
ssh-add $DEPLOY_KEY

# The github.com host-key sometimes changes,
# so lets just remove it so this always succeeds
ssh-keygen -R github.com

# create temporary environment file
echo -e "[$APP_ENVIRONMENT]\nlocalhost" > $INVENTORY_FILE

# git clone the repo (for ansible playbooks),
# and then run the ansible playbook against the localhost
cd ~/
git clone --branch $GIT_BRANCH --single-branch --depth 1 $GIT_REPO $REPO_NAME
cd $REPO_NAME
ansible-playbook -i $INVENTORY_FILE -e app_environment=$APP_ENVIRONMENT $PLAYBOOK -t $TAGS
cd -

# cleanup
rm -rf $REPO_NAME $INVENTORY_FILE
echo END
