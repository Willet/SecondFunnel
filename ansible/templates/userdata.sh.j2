#!/bin/bash -ex
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
echo BEGIN
date '+%Y-%m-%d %H:%M:%S'

# NOTE: this file is not copied to running instances!
# setup the below environment variables and set on AMI's
# within AWS Console

APP_ENVIRONMENT={{app_environment}}
GIT_BRANCH={{git_branch}}
PLAYBOOK_REPO_FILE=ansible/webservers.yml
TAGS=deploy
CHECKOUT_FOLDER={{secondfunnel_directory}}/userdata_checkout
GIT_REPO=git@github.com:Willet/SecondFunnel.git
DEPLOY_KEY={{secondfunnel_directory}}/willet_deploy_key_id_rsa
INVENTORY_FILE={{secondfunnel_directory}}/ansible_userscript_inventory

# start the ssh-agent, and set it up in the current shell
eval `ssh-agent`

# add the deploy key to the running ssh-agent
ssh-add $DEPLOY_KEY

# create ansible inventory file for deployment
echo -e "localhost ansible_connection=local\n" > $INVENTORY_FILE
echo -e "[$APP_ENVIRONMENT]\nlocalhost\n" >> $INVENTORY_FILE
echo -e "[webservers]\nlocalhost\n" >> $INVENTORY_FILE

# git clone the code repository (for ansible playbooks),
# and then run the ansible playbook against the inventory made for localhost
cd {{secondfunnel_directory}}
git clone --branch $GIT_BRANCH --single-branch --depth 1 $GIT_REPO $CHECKOUT_FOLDER
cd $CHECKOUT_FOLDER
chmod -R a+rX $CHECKOUT_FOLDER $INVENTORY_FILE
chown -R willet:willet $CHECKOUT_FOLDER $INVENTORY_FILE
sudo -H -u willet /usr/bin/zsh -c "ansible-playbook -i $INVENTORY_FILE -e app_environment=$APP_ENVIRONMENT $PLAYBOOK_REPO_FILE -t $TAGS"
cd -

# cleanup
rm -rf $CHECKOUT_FOLDER $INVENTORY_FILE
echo END
